<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Elusive.Solodex.UI.Common;component/Resources/Styles/Brushes.xaml" />
        <ResourceDictionary Source="/Elusive.Solodex.UI.Common;component/Resources/Styles/FontStyles.xaml" />
        <ResourceDictionary Source="/Elusive.Solodex.UI.Common;component/Resources/Styles/Effects.xaml" />
        <ResourceDictionary Source="/Elusive.Solodex.UI.Common;component/Resources/Styles/StandardControls/BorderStyles.xaml" />
    </ResourceDictionary.MergedDictionaries>


    <!--  Template for displaying error messages  -->
    <ControlTemplate x:Key="ValidationErrorTemplate">
        <StackPanel Orientation="Horizontal">
            <Border BorderBrush="Red"
                    BorderThickness="1"
                    CornerRadius="2">
                <AdornedElementPlaceholder />
            </Border>
            <TextBlock Margin="10,7,7,7"
                       Foreground="Red"
                       Style="{StaticResource ErrorLabelText}"
                       Text="{Binding [0].ErrorContent}"
                       ToolTip="{Binding [0].ErrorContent}" />
        </StackPanel>
    </ControlTemplate>

    <!--  Template for displaying error messages as a tooltip  -->
    <ControlTemplate x:Key="ValidationErrorTemplateToolTip">
        <DockPanel LastChildFill="true">
            <Border x:Name="ToolTipBorder"
                    Width="20"
                    Height="20"
                    Margin="5,0,0,0"
                    Background="Red"
                    CornerRadius="10"
                    DockPanel.Dock="right"
                    ToolTip="{Binding ElementName=customAdorner,
                                      Path=AdornedElement.(Validation.Errors)[0].ErrorContent}">
                <Grid>
                    <Popup x:Name="PopUp" Margin="1">
                        <Border Background="White"
                                BorderBrush="Black"
                                BorderThickness="1"
                                CornerRadius="2">
                            <TextBlock Margin="7"
                                       Style="{StaticResource DefaultControlText}"
                                       Text="{Binding ElementName=customAdorner,
                                                      Path=AdornedElement.(Validation.Errors)[0].ErrorContent}" />
                        </Border>
                    </Popup>

                    <TextBlock HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               FontWeight="Bold"
                               Foreground="white"
                               Text="!" />
                </Grid>
                <Border.Triggers>
                    <EventTrigger RoutedEvent="UIElement.MouseLeftButtonDown">
                        <BeginStoryboard>
                            <Storyboard>
                                <BooleanAnimationUsingKeyFrames Storyboard.TargetName="PopUp" Storyboard.TargetProperty="(Popup.IsOpen)">
                                    <DiscreteBooleanKeyFrame KeyTime="00:00:00" Value="True" />
                                    <DiscreteBooleanKeyFrame KeyTime="00:00:06" Value="False" />
                                </BooleanAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Border.Triggers>
            </Border>
            <AdornedElementPlaceholder Name="customAdorner" VerticalAlignment="Center">
                <Border x:Name="AdornerBorder"
                        BorderBrush="red"
                        BorderThickness="1" />
            </AdornedElementPlaceholder>
        </DockPanel>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding ElementName=customAdorner, Path=AdornedElement.IsEnabled}" Value="False">
                <Setter TargetName="AdornerBorder" Property="BorderBrush" Value="Transparent" />
                <Setter TargetName="ToolTipBorder" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PopUp" Property="IsOpen" Value="False" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  Base TextBox Style  -->
    <Style x:Key="DefaultTextBoxStyle"
           BasedOn="{StaticResource DefaultInputText}"
           TargetType="TextBox">
        <Setter Property="BorderBrush" Value="{StaticResource DefaultBorderBrush}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Background" Value="WhiteSmoke" />
        <Setter Property="MinHeight" Value="53" />
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ValidationErrorTemplateToolTip}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border x:Name="PART_OuterBorder" Style="{StaticResource TextBoxBorderStyle}">
                        <Border Name="PART_Border"
                                Background="{TemplateBinding Background}"
                                CornerRadius="7">
                            <Grid>
                                <Border x:Name="PART_InnerBorder"
                                        Margin="0"
                                        Background="Transparent"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        ClipToBounds="True"
                                        CornerRadius="7"
                                        Effect="{StaticResource InnerBorderShadow}" />

                                <ScrollViewer x:Name="PART_ContentHost" Margin="5,1" />
                            </Grid>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                            <Setter TargetName="PART_OuterBorder" Property="Background" Value="Transparent" />
                            <Setter TargetName="PART_InnerBorder" Property="Effect" Value="{x:Null}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="{StaticResource DisabledBackgroundBrush}" />
                            <Setter Property="Foreground" Value="LightGray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsReadOnly" Value="True">
                <Setter Property="CaretBrush" Value="Transparent" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  Base TextBox Style  -->
    <Style BasedOn="{StaticResource DefaultTextBoxStyle}" TargetType="TextBox" />



</ResourceDictionary>