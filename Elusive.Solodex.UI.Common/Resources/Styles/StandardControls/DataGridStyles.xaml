<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Elusive.Solodex.UI.Common;component/Resources/Styles/Brushes.xaml" />
        <ResourceDictionary Source="/Elusive.Solodex.UI.Common;component/Resources/Styles/FontStyles.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="ArrowHeadDownStyle" TargetType="Path">
        <Setter Property="Data" Value="M3,3 L27,27 M51.5,3 L27.5,27" />
        <Setter Property="Fill" Value="Black" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Height" Value="7" />
        <Setter Property="Width" Value="12" />
        <Setter Property="Stretch" Value="Fill" />
        <Setter Property="Stroke" Value="Black" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="StrokeThickness" Value="3" />
        <Setter Property="StrokeEndLineCap" Value="Round" />
        <Setter Property="StrokeStartLineCap" Value="Round" />
        <Setter Property="StrokeLineJoin" Value="Round" />
        <Setter Property="StrokeDashCap" Value="Round" />
        <Setter Property="Control.Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="0"
                                  Direction="270"
                                  ShadowDepth="2"
                                  Color="White" />
            </Setter.Value>
        </Setter>

        <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
    </Style>

    <!--  DataGridHeader Style  -->
    <Style x:Key="DataGridHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Background" Value="LightGray" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="SeparatorVisibility" Value="Visible" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontFamily" Value="{StaticResource DefaultFontName}" />
        <Setter Property="Tag">
            <Setter.Value>
                <CornerRadius>0,0,0,0</CornerRadius>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Border MinHeight="50"
                            MaxHeight="50"
                            Margin="{TemplateBinding Margin}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="0"
                            CornerRadius="{TemplateBinding Tag}"
                            Visibility="{TemplateBinding Visibility}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <ContentPresenter x:Name="HeaderText"
                                              Grid.Column="0"
                                              Margin="0"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              Visibility="{TemplateBinding Visibility}" />

                            <Path x:Name="SortArrow"
                                  Grid.Column="1"
                                  Margin="0,0,5,0"
                                  Style="{StaticResource ArrowHeadDownStyle}"
                                  Visibility="Hidden" />

                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="SortDirection" Value="Ascending">
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                            <Setter TargetName="SortArrow" Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Descending">
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="Visibility" Value="Collapsed">
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Collapsed" />
                            <Setter Property="Width" Value="0" />
                        </Trigger>
                        <Trigger Property="CanUserSort" Value="False">
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="CanUserSort" Value="True">
                            <Setter TargetName="HeaderText" Property="Margin" Value="14,2,3,2" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGridFirstHeaderStyle"
           BasedOn="{StaticResource DataGridHeaderStyle}"
           TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Tag">
            <Setter.Value>
                <CornerRadius>10,0,0,0</CornerRadius>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  DataGridCellStyle  -->
    <Style x:Key="DataGridCellStyle" TargetType="{x:Type DataGridCell}">
        <Setter Property="MinHeight" Value="50" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontFamily" Value="{StaticResource DefaultFontName}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Grid Background="{TemplateBinding Background}" Visibility="{TemplateBinding Visibility}">
                        <ContentPresenter x:Name="PART_Content"
                                          Margin="2"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="Center"
                                          OverridesDefaultStyle="True"
                                          Visibility="{TemplateBinding Visibility}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.6" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="LightBlue" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="LightGray" />
                        </MultiTrigger>
                        <Trigger Property="Visibility" Value="Collapsed">
                            <Setter Property="Width" Value="0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TextWrappingDataGridTextColumn">
        <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
    </Style>

    <Style x:Key="StretchDataGridCellStyle"
           BasedOn="{StaticResource DataGridCellStyle}"
           TargetType="DataGridCell">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
    </Style>

    <!--  DataGridCustomTemplateCellStyle  -->
    <!--  Use this style for custom cell templates that colorize content  -->
    <Style x:Key="DataGridCustomTemplateCellStyle" TargetType="{x:Type DataGridCell}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Grid Background="{TemplateBinding Background}" Visibility="{TemplateBinding Visibility}">
                        <ContentPresenter x:Name="PART_Content"
                                          Margin="0"
                                          HorizontalAlignment="Stretch"
                                          VerticalAlignment="Stretch"
                                          OverridesDefaultStyle="True"
                                          Visibility="{TemplateBinding Visibility}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.75" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="LightBlue" />
                        </Trigger>
                        <Trigger Property="Visibility" Value="Collapsed">
                            <Setter Property="Width" Value="0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--  DataGridLeftAlignedCellStyle  -->
    <Style x:Key="DataGridLeftAlignedCellStyle"
           BasedOn="{StaticResource DataGridCellStyle}"
           TargetType="{x:Type DataGridCell}">
        <Setter Property="HorizontalContentAlignment" Value="Left" />
    </Style>

    <!--  DataGridCommentCellStyle  -->
    <Style x:Key="DataGridCommentCellStyle"
           BasedOn="{StaticResource DataGridLeftAlignedCellStyle}"
           TargetType="{x:Type DataGridCell}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <DockPanel Background="{TemplateBinding Background}"
                               LastChildFill="True"
                               Visibility="{TemplateBinding Visibility}">
                        <ContentPresenter x:Name="PART_Content"
                                          Margin="0"
                                          HorizontalAlignment="Left"
                                          VerticalAlignment="Center"
                                          OverridesDefaultStyle="True"
                                          Visibility="{TemplateBinding Visibility}" />
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.75" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="LightBlue" />
                        </Trigger>
                        <Trigger Property="Visibility" Value="Collapsed">
                            <Setter Property="Width" Value="0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  DatGrid Notes Cell Template  -->
    <DataTemplate x:Key="NotesCellTemplate">
        <TextBlock ScrollViewer.CanContentScroll="True"
                   ScrollViewer.VerticalScrollBarVisibility="Auto"
                   Text="{Binding Notes}"
                   TextWrapping="Wrap" />
    </DataTemplate>

    <!--  DataGrid Style  -->
    <Style x:Key="DataGridStyle" TargetType="{x:Type DataGrid}">
        <Setter Property="RowBackground" Value="White" />
        <Setter Property="AlternatingRowBackground" Value="LightYellow" />
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="CanUserAddRows" Value="False" />
        <Setter Property="CanUserDeleteRows" Value="False" />
        <Setter Property="CanUserReorderColumns" Value="False" />
        <Setter Property="CanUserResizeRows" Value="False" />
        <Setter Property="Background" Value="White" />
        <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="None" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="ColumnHeaderStyle" Value="{StaticResource DataGridHeaderStyle}" />
        <Setter Property="CellStyle" Value="{StaticResource DataGridCellStyle}" />
        <Setter Property="HorizontalGridLinesBrush" Value="DarkGray" />
        <Setter Property="VerticalGridLinesBrush" Value="DarkGray" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="EnableRowVirtualization" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGrid}">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="0"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <Button Width="{Binding CellsPanelHorizontalOffset,
                                                                RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                                Command="{x:Static DataGrid.SelectAllCommand}"
                                                Focusable="false"
                                                Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle,
                                                                                              TypeInTargetAssembly={x:Type DataGrid}}}"
                                                Visibility="{Binding HeadersVisibility,
                                                                     ConverterParameter={x:Static DataGridHeadersVisibility.All},
                                                                     Converter={x:Static DataGrid.HeadersVisibilityConverter},
                                                                     RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                        <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter"
                                                                        Grid.Column="1"
                                                                        Visibility="{Binding HeadersVisibility,
                                                                                             ConverterParameter={x:Static DataGridHeadersVisibility.Column},
                                                                                             Converter={x:Static DataGrid.HeadersVisibilityConverter},
                                                                                             RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                                Grid.Row="1"
                                                                Grid.ColumnSpan="2"
                                                                CanContentScroll="{TemplateBinding CanContentScroll}" />
                                        <ScrollBar x:Name="PART_VerticalScrollBar"
                                                   Grid.Row="1"
                                                   Grid.Column="2"
                                                   Maximum="{TemplateBinding ScrollableHeight}"
                                                   Orientation="Vertical"
                                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                                   Value="{Binding VerticalOffset,
                                                                   Mode=OneWay,
                                                                   RelativeSource={RelativeSource TemplatedParent}}" />
                                        <Grid Grid.Row="2" Grid.Column="1">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <ScrollBar x:Name="PART_HorizontalScrollBar"
                                                       Grid.Column="1"
                                                       Maximum="{TemplateBinding ScrollableWidth}"
                                                       Orientation="Horizontal"
                                                       ViewportSize="{TemplateBinding ViewportWidth}"
                                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                       Value="{Binding HorizontalOffset,
                                                                       Mode=OneWay,
                                                                       RelativeSource={RelativeSource TemplatedParent}}" />
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter Margin="1,0,0,0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource DataGridStyle}" TargetType="{x:Type DataGrid}" />

</ResourceDictionary>